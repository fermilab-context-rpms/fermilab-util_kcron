= kcron(1)

== NAME
kcroninit, kcrondestroy - Utilities getting Kerberos in scheduled jobs or daemons

== SYNOPSIS

*kcroninit* creates a cron principal and extracts into a keytab

*kcrondestroy* destroys keytab and deletes cron principal created by kcroninit(1)

== DESCRIPTION

The *kcroninit* utility creates a new principal of the form +username/cron/host.domain@REALM+ and then creates a keytab file that can be used automatically by MIT Kerberos 1.11 (or later) or Heimdal Kerberos 8 (or later).  The kcroninit(1) utility must be run under account +username+ and will prompt to authenticate as +username@REALM+.

The *kcrondestroy* utility destroys the kerberos principal of the form +username/cron/host.domain@REALM+ (created previously via the kcroninit(1) utility) and then removes keytab file that was used for authentication.

After you've run the kcroninit(1) utility Kerberos will begin using this keytab when any current tickets expire.  You can force this behavior by running KDESTROY(1) on your ticket cache now.

=== WORKFLOW

Kerberos administrator will first create principal +username/cron/host.domain@REALM+ and provide initial password to the requestor. The requestor can then run +kcroninit+ utility to create the keytab.

Run +kcroninit+ to generate your kcron keytab (in +/var/kerberos/krb5/user/${EUID}/client.keytab+) once your principal exists and you have the required password.  Defaults for +kcroninit+ can be provided in either +/etc/sysconfig/kcron+ or +~/.config/kcron+ if you desire.

When your user/job/daemon requires a Kerberos ticket but does not have one, the Kerberos libraries will automatically import the ticket.
The identity is selected based on either +~/.k5identity+ or +slot 1+ from your kcron keytab (in +/var/kerberos/krb5/user/${EUID}/client.keytab+ following the traditional +kinit -kt+ matching rules).

Runtime usage is automatic if you do not have a valid Kerberos ticket.

Setup your cron job following traditional cron rules.  A +kcron+ prefix command is no longer required.

=== kcroninit

Accepts no arguments

	kcroninit

Configuration can be provided in either +/etc/sysconfig/kcron+ or +~/.config/kcron+ if you desire.

=== kcrondestroy

Accepts no arguments

	kcrondestroy

Configuration can be provided in either +/etc/sysconfig/kcron+ or +~/.config/kcron+ if you desire.

== LIMITATIONS

ifdef::libcap[]
The kcron helper utilities utilize filesystem CAPABILITIES(7) stored as XATTR(7) values on the binaries.  The application will not run as expected if your system does not support them.

On modern Linux systems, these are enabled by default.

NFS does not support CAPABILITIES(7) nor should it.  However, if you set this SUID 'root', it will continue to work as expected.  It is a terrible idea to permit SUID applications to run SUID from network file systems.

You can review them with GETCAP(8) on /usr/libexec/kcron/*
endif::libcap[]

The kcron helper utilities assume basic kerberos utilities are installed and configured on the system:
KRB5.CONF(5)
KINIT(1)
KDESTROY(1)
KADMIN(1)

== EXIT STATUS

*0*::
  Success.

*1*::
  Failure (usage error; configuration error; unexpected error).

*2*::
  Failure (missing utilities; insufficient permissions) 

== NOTE

The use of this utility requires changes to KDC configuration. Kerberos admins should review the README file for the details. 

Recent versions of kerberos (MIT 1.11+, Heimdal 8+) are able to automatically kinit against 

+/var/kerberos/krb5/user/${EUID}/client.keytab+

if you do not have a valid Kerberos ticket.

By default this behavior uses +~/.k5identity+ if users have this file.  If not the first principle found within the keytab (KTUTIL(1) slot 1 KINIT(1) rules for kinit -kt).

== LICENCE

Copyright 2020 Fermi Research Alliance, LLC

This software was produced under U.S. Government contract DE-AC02-07CH11359 for Fermi National Accelerator Laboratory (Fermilab), which is operated by Fermi Research Alliance, LLC for the U.S. Department of Energy. The U.S. Government has rights to use, reproduce, and distribute this software.  NEITHER THE GOVERNMENT NOR FERMI RESEARCH ALLIANCE, LLC MAKES ANY WARRANTY, EXPRESS OR IMPLIED, OR ASSUMES ANY LIABILITY FOR THE USE OF THIS SOFTWARE.  If software is modified to produce derivative works, such modified software should be clearly marked, so as not to confuse it with the version available from Fermilab.

Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR FERMI RESEARCH ALLIANCE, LLC BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
